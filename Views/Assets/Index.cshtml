@model List<Application.ViewModels.CalculatedAssetsViewModel>
@{
    ViewData["Title"] = "Assets Index";
}

@if (!string.IsNullOrWhiteSpace(ViewBag.message))
{
    <div class="alert @ViewBag.MessageType alert-dismissible fade show" role="alert">
        @ViewBag.Message
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="row mb-4">

    <div class="col-12 col-md-6">
        <div class="card">
            <div class="card-header bg-primary text-light">
                <h5 class="text-center">Select Prediction Mode</h5>
            </div>
            <div class="card-body">
                <form asp-controller="Assets" asp-action="Index" method="post">
                    <div class="mb-3">
                        <label for="indicatorType" class="form-label">Indicator Type:</label>
                        <select name="indicatorType" class="form-select" required>
                            <option value="sma">Media Móvil Simple (SMA) Crossover</option>
                            <option value="rl">Regresión Lineal</option>
                            <option value="roc">Momentum (ROC)</option>
                        </select>
                    </div>
                    <div>
                        <a asp-controller="Assets" asp-action="AddAssets" class="btn btn-outline-success float-end">Add New Asset</a>
                        <button type="submit" class="btn btn-outline-primary float-end me-2">Calculate Prediction</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-12 col-md-6">
        <div class="card">
            <div class="card-header bg-secondary text-light">
                <h5 class="text-center">Registered Assets</h5>
            </div>
            <div class="card-body">
                @if (ViewBag.AssetNames != null && ((List<string>)ViewBag.AssetNames).Count > 0)
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var name in (List<string>)ViewBag.AssetNames)
                        {
                            <li class="list-group-item">@name</li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted">No assets registered yet.</p>
                }
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-12">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Asset Name</th>
                    <th>Indicator</th>
                    <th>Price ($)</th>
                    <th>Trend</th>
                </tr>
            </thead>
            <tbody>
                @if (Model == null || Model.Count == 0)
                {
                    <tr>
                        <td colspan="4" class="text-center text-muted">No assets yet</td>
                    </tr>
                }
                else
                {
                    @foreach (var asset in Model)
                    {
                        <tr class="@(asset.Trend == "Alcista" || asset.Trend == "Bullish" ? "table-success" : "table-danger")">
                            <td>@asset.AssetsName</td>
                            <td>@asset.IndicatorName</td>
                            <td>@asset.Price</td>
                            <td>@asset.Trend</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row mt-3">
    <div class="col-12">
        <h5>Details:</h5>
        <textarea class="form-control" rows="10" readonly>
@foreach(var asset in Model ?? new List<Application.ViewModels.CalculatedAssetsViewModel>())
{

@asset.AssetsName   

@asset.Details

                

}
        </textarea>
    </div>
</div>


@section Scripts {
    <script src="~/js/site.js" asp-append-version="true"></script>
}
